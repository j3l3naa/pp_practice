Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body

    6 parameter: %empty
    7          | _TYPE _ID

    8 body: _LBRACKET variable_list statement_list _RBRACKET

    9 variable_list: %empty
   10              | variable_list variable

   11 $@2: %empty

   12 variable: _TYPE $@2 variables _SEMICOLON

   13 variables: _ID
   14          | variables _COMMA _ID

   15 statement_list: %empty
   16               | statement_list statement

   17 statement: compound_statement
   18          | assignment_statement
   19          | if_statement
   20          | return_statement
   21          | do_while_statement
   22          | increment_statement
   23          | switch_statement
   24          | standard_for
   25          | basic_for
   26          | function_call _SEMICOLON

   27 @3: %empty

   28 $@4: %empty

   29 compound_statement: _LBRACKET @3 variable_list statement_list $@4 _RBRACKET

   30 assignment_statement: assigns num_exp _SEMICOLON

   31 assigns: _ID _ASSIGN
   32        | assigns _ID _ASSIGN

   33 increment_statement: _ID _INC _SEMICOLON

   34 num_exp: exp
   35        | num_exp _AROP exp

   36 exp: literal
   37    | _ID
   38    | function_call
   39    | _ID _INC
   40    | _LPAREN num_exp _RPAREN

   41 literal: _INT_NUMBER
   42        | _UINT_NUMBER

   43 $@5: %empty

   44 function_call: _ID $@5 _LPAREN argument _RPAREN

   45 argument: %empty
   46         | num_exp

   47 if_statement: if_part
   48             | if_part _ELSE statement

   49 if_part: _IF _LPAREN log_exp _RPAREN statement

   50 do_while_statement: _DO statement _WHILE _LPAREN log_exp _RPAREN _SEMICOLON

   51 $@6: %empty

   52 switch_statement: _SWITCH _LPAREN _ID $@6 _RPAREN _LBRACKET case_part default_part _RBRACKET

   53 case_part: case
   54          | case_part case

   55 $@7: %empty

   56 case: _CASE literal $@7 _COLON statement break_part

   57 break_part: %empty
   58           | _BREAK _SEMICOLON

   59 default_part: %empty
   60             | _DEFAULT _COLON statement

   61 @8: %empty

   62 $@9: %empty

   63 standard_for: _FOR _LPAREN _TYPE _ID _ASSIGN literal @8 _SEMICOLON rel_exp _SEMICOLON _ID $@9 _INC _RPAREN _LBRACKET statement _RBRACKET

   64 $@10: %empty

   65 basic_for: _FOR _ID _ASSIGN literal _DIRECTION literal $@10 step_part statement _NEXT _ID

   66 step_part: %empty
   67          | _STEP literal

   68 log_exp: rel_exp
   69        | log_exp _LOGOP rel_exp

   70 rel_exp: num_exp _RELOP num_exp
   71        | _LPAREN rel_exp _RPAREN

   72 return_statement: _RETURN num_exp _SEMICOLON
   73                 | _RETURN _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE <i> (258) 5 7 12 63
_IF (259) 49
_ELSE (260) 48
_RETURN (261) 72 73
_ID <s> (262) 5 7 13 14 31 32 33 37 39 44 52 63 65
_INT_NUMBER <s> (263) 41
_UINT_NUMBER <s> (264) 42
_DIRECTION <i> (265) 65
_LPAREN (266) 5 40 44 49 50 52 63 71
_RPAREN (267) 5 40 44 49 50 52 63 71
_LBRACKET (268) 8 29 52 63
_RBRACKET (269) 8 29 52 63
_ASSIGN (270) 31 32 63 65
_SEMICOLON (271) 12 26 30 33 50 58 63 72 73
_AROP <i> (272) 35
_RELOP <i> (273) 70
_LOGOP <i> (274) 69
_DO (275) 50
_WHILE (276) 50
_COMMA (277) 14
_INC (278) 33 39 63
_SWITCH (279) 52
_CASE (280) 56
_DEFAULT (281) 60
_BREAK (282) 58
_COLON (283) 56 60
_FOR (284) 63 65
_NEXT (285) 65
_STEP (286) 67
ONLY_IF (287)


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
program (34)
    on left: 1, on right: 0
function_list (35)
    on left: 2 3, on right: 1 3
function (36)
    on left: 5, on right: 2 3
$@1 (37)
    on left: 4, on right: 5
parameter (38)
    on left: 6 7, on right: 5
body (39)
    on left: 8, on right: 5
variable_list (40)
    on left: 9 10, on right: 8 10 29
variable (41)
    on left: 12, on right: 10
$@2 (42)
    on left: 11, on right: 12
variables (43)
    on left: 13 14, on right: 12 14
statement_list (44)
    on left: 15 16, on right: 8 16 29
statement (45)
    on left: 17 18 19 20 21 22 23 24 25 26, on right: 16 48 49 50 56
    60 63 65
compound_statement (46)
    on left: 29, on right: 17
@3 (47)
    on left: 27, on right: 29
$@4 (48)
    on left: 28, on right: 29
assignment_statement (49)
    on left: 30, on right: 18
assigns <i> (50)
    on left: 31 32, on right: 30 32
increment_statement (51)
    on left: 33, on right: 22
num_exp <i> (52)
    on left: 34 35, on right: 30 35 40 46 70 72
exp <i> (53)
    on left: 36 37 38 39 40, on right: 34 35
literal <i> (54)
    on left: 41 42, on right: 36 56 63 65 67
function_call <i> (55)
    on left: 44, on right: 26 38
$@5 (56)
    on left: 43, on right: 44
argument <i> (57)
    on left: 45 46, on right: 44
if_statement (58)
    on left: 47 48, on right: 19
if_part (59)
    on left: 49, on right: 47 48
do_while_statement (60)
    on left: 50, on right: 21
switch_statement (61)
    on left: 52, on right: 23
$@6 (62)
    on left: 51, on right: 52
case_part (63)
    on left: 53 54, on right: 52 54
case (64)
    on left: 56, on right: 53 54
$@7 (65)
    on left: 55, on right: 56
break_part (66)
    on left: 57 58, on right: 56
default_part (67)
    on left: 59 60, on right: 52
standard_for (68)
    on left: 63, on right: 24
@8 (69)
    on left: 61, on right: 63
$@9 (70)
    on left: 62, on right: 63
basic_for (71)
    on left: 65, on right: 25
$@10 (72)
    on left: 64, on right: 65
step_part (73)
    on left: 66 67, on right: 65
log_exp <i> (74)
    on left: 68 69, on right: 49 50 69
rel_exp <i> (75)
    on left: 70 71, on right: 63 68 69 71
return_statement (76)
    on left: 72 73, on right: 20


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    5 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    5 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    5 function: _TYPE _ID $@1 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    5 function: _TYPE _ID $@1 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 10

    $default  reduce using rule 6 (parameter)

    parameter  go to state 11


State 10

    7 parameter: _TYPE . _ID

    _ID  shift, and go to state 12


State 11

    5 function: _TYPE _ID $@1 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 13


State 12

    7 parameter: _TYPE _ID .

    $default  reduce using rule 7 (parameter)


State 13

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 14

    body  go to state 15


State 14

    8 body: _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 9 (variable_list)

    variable_list  go to state 16


State 15

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 5 (function)


State 16

    8 body: _LBRACKET variable_list . statement_list _RBRACKET
   10 variable_list: variable_list . variable

    _TYPE  shift, and go to state 17

    $default  reduce using rule 15 (statement_list)

    variable        go to state 18
    statement_list  go to state 19


State 17

   12 variable: _TYPE . $@2 variables _SEMICOLON

    $default  reduce using rule 11 ($@2)

    $@2  go to state 20


State 18

   10 variable_list: variable_list variable .

    $default  reduce using rule 10 (variable_list)


State 19

    8 body: _LBRACKET variable_list statement_list . _RBRACKET
   16 statement_list: statement_list . statement

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _ID        shift, and go to state 23
    _LBRACKET  shift, and go to state 24
    _RBRACKET  shift, and go to state 25
    _DO        shift, and go to state 26
    _SWITCH    shift, and go to state 27
    _FOR       shift, and go to state 28

    statement             go to state 29
    compound_statement    go to state 30
    assignment_statement  go to state 31
    assigns               go to state 32
    increment_statement   go to state 33
    function_call         go to state 34
    if_statement          go to state 35
    if_part               go to state 36
    do_while_statement    go to state 37
    switch_statement      go to state 38
    standard_for          go to state 39
    basic_for             go to state 40
    return_statement      go to state 41


State 20

   12 variable: _TYPE $@2 . variables _SEMICOLON

    _ID  shift, and go to state 42

    variables  go to state 43


State 21

   49 if_part: _IF . _LPAREN log_exp _RPAREN statement

    _LPAREN  shift, and go to state 44


State 22

   72 return_statement: _RETURN . num_exp _SEMICOLON
   73                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 45
    _INT_NUMBER   shift, and go to state 46
    _UINT_NUMBER  shift, and go to state 47
    _LPAREN       shift, and go to state 48
    _SEMICOLON    shift, and go to state 49

    num_exp        go to state 50
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53


State 23

   31 assigns: _ID . _ASSIGN
   33 increment_statement: _ID . _INC _SEMICOLON
   44 function_call: _ID . $@5 _LPAREN argument _RPAREN

    _ASSIGN  shift, and go to state 54
    _INC     shift, and go to state 55

    $default  reduce using rule 43 ($@5)

    $@5  go to state 56


State 24

   29 compound_statement: _LBRACKET . @3 variable_list statement_list $@4 _RBRACKET

    $default  reduce using rule 27 (@3)

    @3  go to state 57


State 25

    8 body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 8 (body)


State 26

   50 do_while_statement: _DO . statement _WHILE _LPAREN log_exp _RPAREN _SEMICOLON

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _ID        shift, and go to state 23
    _LBRACKET  shift, and go to state 24
    _DO        shift, and go to state 26
    _SWITCH    shift, and go to state 27
    _FOR       shift, and go to state 28

    statement             go to state 58
    compound_statement    go to state 30
    assignment_statement  go to state 31
    assigns               go to state 32
    increment_statement   go to state 33
    function_call         go to state 34
    if_statement          go to state 35
    if_part               go to state 36
    do_while_statement    go to state 37
    switch_statement      go to state 38
    standard_for          go to state 39
    basic_for             go to state 40
    return_statement      go to state 41


State 27

   52 switch_statement: _SWITCH . _LPAREN _ID $@6 _RPAREN _LBRACKET case_part default_part _RBRACKET

    _LPAREN  shift, and go to state 59


State 28

   63 standard_for: _FOR . _LPAREN _TYPE _ID _ASSIGN literal @8 _SEMICOLON rel_exp _SEMICOLON _ID $@9 _INC _RPAREN _LBRACKET statement _RBRACKET
   65 basic_for: _FOR . _ID _ASSIGN literal _DIRECTION literal $@10 step_part statement _NEXT _ID

    _ID      shift, and go to state 60
    _LPAREN  shift, and go to state 61


State 29

   16 statement_list: statement_list statement .

    $default  reduce using rule 16 (statement_list)


State 30

   17 statement: compound_statement .

    $default  reduce using rule 17 (statement)


State 31

   18 statement: assignment_statement .

    $default  reduce using rule 18 (statement)


State 32

   30 assignment_statement: assigns . num_exp _SEMICOLON
   32 assigns: assigns . _ID _ASSIGN

    _ID           shift, and go to state 62
    _INT_NUMBER   shift, and go to state 46
    _UINT_NUMBER  shift, and go to state 47
    _LPAREN       shift, and go to state 48

    num_exp        go to state 63
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53


State 33

   22 statement: increment_statement .

    $default  reduce using rule 22 (statement)


State 34

   26 statement: function_call . _SEMICOLON

    _SEMICOLON  shift, and go to state 64


State 35

   19 statement: if_statement .

    $default  reduce using rule 19 (statement)


State 36

   47 if_statement: if_part .
   48             | if_part . _ELSE statement

    _ELSE  shift, and go to state 65

    $default  reduce using rule 47 (if_statement)


State 37

   21 statement: do_while_statement .

    $default  reduce using rule 21 (statement)


State 38

   23 statement: switch_statement .

    $default  reduce using rule 23 (statement)


State 39

   24 statement: standard_for .

    $default  reduce using rule 24 (statement)


State 40

   25 statement: basic_for .

    $default  reduce using rule 25 (statement)


State 41

   20 statement: return_statement .

    $default  reduce using rule 20 (statement)


State 42

   13 variables: _ID .

    $default  reduce using rule 13 (variables)


State 43

   12 variable: _TYPE $@2 variables . _SEMICOLON
   14 variables: variables . _COMMA _ID

    _SEMICOLON  shift, and go to state 66
    _COMMA      shift, and go to state 67


State 44

   49 if_part: _IF _LPAREN . log_exp _RPAREN statement

    _ID           shift, and go to state 45
    _INT_NUMBER   shift, and go to state 46
    _UINT_NUMBER  shift, and go to state 47
    _LPAREN       shift, and go to state 68

    num_exp        go to state 69
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53
    log_exp        go to state 70
    rel_exp        go to state 71


State 45

   37 exp: _ID .
   39    | _ID . _INC
   44 function_call: _ID . $@5 _LPAREN argument _RPAREN

    _INC  shift, and go to state 72

    _LPAREN   reduce using rule 43 ($@5)
    $default  reduce using rule 37 (exp)

    $@5  go to state 56


State 46

   41 literal: _INT_NUMBER .

    $default  reduce using rule 41 (literal)


State 47

   42 literal: _UINT_NUMBER .

    $default  reduce using rule 42 (literal)


State 48

   40 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 45
    _INT_NUMBER   shift, and go to state 46
    _UINT_NUMBER  shift, and go to state 47
    _LPAREN       shift, and go to state 48

    num_exp        go to state 73
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53


State 49

   73 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 73 (return_statement)


State 50

   35 num_exp: num_exp . _AROP exp
   72 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 74
    _AROP       shift, and go to state 75


State 51

   34 num_exp: exp .

    $default  reduce using rule 34 (num_exp)


State 52

   36 exp: literal .

    $default  reduce using rule 36 (exp)


State 53

   38 exp: function_call .

    $default  reduce using rule 38 (exp)


State 54

   31 assigns: _ID _ASSIGN .

    $default  reduce using rule 31 (assigns)


State 55

   33 increment_statement: _ID _INC . _SEMICOLON

    _SEMICOLON  shift, and go to state 76


State 56

   44 function_call: _ID $@5 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 77


State 57

   29 compound_statement: _LBRACKET @3 . variable_list statement_list $@4 _RBRACKET

    $default  reduce using rule 9 (variable_list)

    variable_list  go to state 78


State 58

   50 do_while_statement: _DO statement . _WHILE _LPAREN log_exp _RPAREN _SEMICOLON

    _WHILE  shift, and go to state 79


State 59

   52 switch_statement: _SWITCH _LPAREN . _ID $@6 _RPAREN _LBRACKET case_part default_part _RBRACKET

    _ID  shift, and go to state 80


State 60

   65 basic_for: _FOR _ID . _ASSIGN literal _DIRECTION literal $@10 step_part statement _NEXT _ID

    _ASSIGN  shift, and go to state 81


State 61

   63 standard_for: _FOR _LPAREN . _TYPE _ID _ASSIGN literal @8 _SEMICOLON rel_exp _SEMICOLON _ID $@9 _INC _RPAREN _LBRACKET statement _RBRACKET

    _TYPE  shift, and go to state 82


State 62

   32 assigns: assigns _ID . _ASSIGN
   37 exp: _ID .
   39    | _ID . _INC
   44 function_call: _ID . $@5 _LPAREN argument _RPAREN

    _ASSIGN  shift, and go to state 83
    _INC     shift, and go to state 72

    _LPAREN   reduce using rule 43 ($@5)
    $default  reduce using rule 37 (exp)

    $@5  go to state 56


State 63

   30 assignment_statement: assigns num_exp . _SEMICOLON
   35 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 84
    _AROP       shift, and go to state 75


State 64

   26 statement: function_call _SEMICOLON .

    $default  reduce using rule 26 (statement)


State 65

   48 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _ID        shift, and go to state 23
    _LBRACKET  shift, and go to state 24
    _DO        shift, and go to state 26
    _SWITCH    shift, and go to state 27
    _FOR       shift, and go to state 28

    statement             go to state 85
    compound_statement    go to state 30
    assignment_statement  go to state 31
    assigns               go to state 32
    increment_statement   go to state 33
    function_call         go to state 34
    if_statement          go to state 35
    if_part               go to state 36
    do_while_statement    go to state 37
    switch_statement      go to state 38
    standard_for          go to state 39
    basic_for             go to state 40
    return_statement      go to state 41


State 66

   12 variable: _TYPE $@2 variables _SEMICOLON .

    $default  reduce using rule 12 (variable)


State 67

   14 variables: variables _COMMA . _ID

    _ID  shift, and go to state 86


State 68

   40 exp: _LPAREN . num_exp _RPAREN
   71 rel_exp: _LPAREN . rel_exp _RPAREN

    _ID           shift, and go to state 45
    _INT_NUMBER   shift, and go to state 46
    _UINT_NUMBER  shift, and go to state 47
    _LPAREN       shift, and go to state 68

    num_exp        go to state 87
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53
    rel_exp        go to state 88


State 69

   35 num_exp: num_exp . _AROP exp
   70 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 75
    _RELOP  shift, and go to state 89


State 70

   49 if_part: _IF _LPAREN log_exp . _RPAREN statement
   69 log_exp: log_exp . _LOGOP rel_exp

    _RPAREN  shift, and go to state 90
    _LOGOP   shift, and go to state 91


State 71

   68 log_exp: rel_exp .

    $default  reduce using rule 68 (log_exp)


State 72

   39 exp: _ID _INC .

    $default  reduce using rule 39 (exp)


State 73

   35 num_exp: num_exp . _AROP exp
   40 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 92
    _AROP    shift, and go to state 75


State 74

   72 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 72 (return_statement)


State 75

   35 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 45
    _INT_NUMBER   shift, and go to state 46
    _UINT_NUMBER  shift, and go to state 47
    _LPAREN       shift, and go to state 48

    exp            go to state 93
    literal        go to state 52
    function_call  go to state 53


State 76

   33 increment_statement: _ID _INC _SEMICOLON .

    $default  reduce using rule 33 (increment_statement)


State 77

   44 function_call: _ID $@5 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 45
    _INT_NUMBER   shift, and go to state 46
    _UINT_NUMBER  shift, and go to state 47
    _LPAREN       shift, and go to state 48

    $default  reduce using rule 45 (argument)

    num_exp        go to state 94
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53
    argument       go to state 95


State 78

   10 variable_list: variable_list . variable
   29 compound_statement: _LBRACKET @3 variable_list . statement_list $@4 _RBRACKET

    _TYPE  shift, and go to state 17

    $default  reduce using rule 15 (statement_list)

    variable        go to state 18
    statement_list  go to state 96


State 79

   50 do_while_statement: _DO statement _WHILE . _LPAREN log_exp _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 97


State 80

   52 switch_statement: _SWITCH _LPAREN _ID . $@6 _RPAREN _LBRACKET case_part default_part _RBRACKET

    $default  reduce using rule 51 ($@6)

    $@6  go to state 98


State 81

   65 basic_for: _FOR _ID _ASSIGN . literal _DIRECTION literal $@10 step_part statement _NEXT _ID

    _INT_NUMBER   shift, and go to state 46
    _UINT_NUMBER  shift, and go to state 47

    literal  go to state 99


State 82

   63 standard_for: _FOR _LPAREN _TYPE . _ID _ASSIGN literal @8 _SEMICOLON rel_exp _SEMICOLON _ID $@9 _INC _RPAREN _LBRACKET statement _RBRACKET

    _ID  shift, and go to state 100


State 83

   32 assigns: assigns _ID _ASSIGN .

    $default  reduce using rule 32 (assigns)


State 84

   30 assignment_statement: assigns num_exp _SEMICOLON .

    $default  reduce using rule 30 (assignment_statement)


State 85

   48 if_statement: if_part _ELSE statement .

    $default  reduce using rule 48 (if_statement)


State 86

   14 variables: variables _COMMA _ID .

    $default  reduce using rule 14 (variables)


State 87

   35 num_exp: num_exp . _AROP exp
   40 exp: _LPAREN num_exp . _RPAREN
   70 rel_exp: num_exp . _RELOP num_exp

    _RPAREN  shift, and go to state 92
    _AROP    shift, and go to state 75
    _RELOP   shift, and go to state 89


State 88

   71 rel_exp: _LPAREN rel_exp . _RPAREN

    _RPAREN  shift, and go to state 101


State 89

   70 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 45
    _INT_NUMBER   shift, and go to state 46
    _UINT_NUMBER  shift, and go to state 47
    _LPAREN       shift, and go to state 48

    num_exp        go to state 102
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53


State 90

   49 if_part: _IF _LPAREN log_exp _RPAREN . statement

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _ID        shift, and go to state 23
    _LBRACKET  shift, and go to state 24
    _DO        shift, and go to state 26
    _SWITCH    shift, and go to state 27
    _FOR       shift, and go to state 28

    statement             go to state 103
    compound_statement    go to state 30
    assignment_statement  go to state 31
    assigns               go to state 32
    increment_statement   go to state 33
    function_call         go to state 34
    if_statement          go to state 35
    if_part               go to state 36
    do_while_statement    go to state 37
    switch_statement      go to state 38
    standard_for          go to state 39
    basic_for             go to state 40
    return_statement      go to state 41


State 91

   69 log_exp: log_exp _LOGOP . rel_exp

    _ID           shift, and go to state 45
    _INT_NUMBER   shift, and go to state 46
    _UINT_NUMBER  shift, and go to state 47
    _LPAREN       shift, and go to state 68

    num_exp        go to state 69
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53
    rel_exp        go to state 104


State 92

   40 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 40 (exp)


State 93

   35 num_exp: num_exp _AROP exp .

    $default  reduce using rule 35 (num_exp)


State 94

   35 num_exp: num_exp . _AROP exp
   46 argument: num_exp .

    _AROP  shift, and go to state 75

    $default  reduce using rule 46 (argument)


State 95

   44 function_call: _ID $@5 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 105


State 96

   16 statement_list: statement_list . statement
   29 compound_statement: _LBRACKET @3 variable_list statement_list . $@4 _RBRACKET

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _ID        shift, and go to state 23
    _LBRACKET  shift, and go to state 24
    _DO        shift, and go to state 26
    _SWITCH    shift, and go to state 27
    _FOR       shift, and go to state 28

    $default  reduce using rule 28 ($@4)

    statement             go to state 29
    compound_statement    go to state 30
    $@4                   go to state 106
    assignment_statement  go to state 31
    assigns               go to state 32
    increment_statement   go to state 33
    function_call         go to state 34
    if_statement          go to state 35
    if_part               go to state 36
    do_while_statement    go to state 37
    switch_statement      go to state 38
    standard_for          go to state 39
    basic_for             go to state 40
    return_statement      go to state 41


State 97

   50 do_while_statement: _DO statement _WHILE _LPAREN . log_exp _RPAREN _SEMICOLON

    _ID           shift, and go to state 45
    _INT_NUMBER   shift, and go to state 46
    _UINT_NUMBER  shift, and go to state 47
    _LPAREN       shift, and go to state 68

    num_exp        go to state 69
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53
    log_exp        go to state 107
    rel_exp        go to state 71


State 98

   52 switch_statement: _SWITCH _LPAREN _ID $@6 . _RPAREN _LBRACKET case_part default_part _RBRACKET

    _RPAREN  shift, and go to state 108


State 99

   65 basic_for: _FOR _ID _ASSIGN literal . _DIRECTION literal $@10 step_part statement _NEXT _ID

    _DIRECTION  shift, and go to state 109


State 100

   63 standard_for: _FOR _LPAREN _TYPE _ID . _ASSIGN literal @8 _SEMICOLON rel_exp _SEMICOLON _ID $@9 _INC _RPAREN _LBRACKET statement _RBRACKET

    _ASSIGN  shift, and go to state 110


State 101

   71 rel_exp: _LPAREN rel_exp _RPAREN .

    $default  reduce using rule 71 (rel_exp)


State 102

   35 num_exp: num_exp . _AROP exp
   70 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 75

    $default  reduce using rule 70 (rel_exp)


State 103

   49 if_part: _IF _LPAREN log_exp _RPAREN statement .

    $default  reduce using rule 49 (if_part)


State 104

   69 log_exp: log_exp _LOGOP rel_exp .

    $default  reduce using rule 69 (log_exp)


State 105

   44 function_call: _ID $@5 _LPAREN argument _RPAREN .

    $default  reduce using rule 44 (function_call)


State 106

   29 compound_statement: _LBRACKET @3 variable_list statement_list $@4 . _RBRACKET

    _RBRACKET  shift, and go to state 111


State 107

   50 do_while_statement: _DO statement _WHILE _LPAREN log_exp . _RPAREN _SEMICOLON
   69 log_exp: log_exp . _LOGOP rel_exp

    _RPAREN  shift, and go to state 112
    _LOGOP   shift, and go to state 91


State 108

   52 switch_statement: _SWITCH _LPAREN _ID $@6 _RPAREN . _LBRACKET case_part default_part _RBRACKET

    _LBRACKET  shift, and go to state 113


State 109

   65 basic_for: _FOR _ID _ASSIGN literal _DIRECTION . literal $@10 step_part statement _NEXT _ID

    _INT_NUMBER   shift, and go to state 46
    _UINT_NUMBER  shift, and go to state 47

    literal  go to state 114


State 110

   63 standard_for: _FOR _LPAREN _TYPE _ID _ASSIGN . literal @8 _SEMICOLON rel_exp _SEMICOLON _ID $@9 _INC _RPAREN _LBRACKET statement _RBRACKET

    _INT_NUMBER   shift, and go to state 46
    _UINT_NUMBER  shift, and go to state 47

    literal  go to state 115


State 111

   29 compound_statement: _LBRACKET @3 variable_list statement_list $@4 _RBRACKET .

    $default  reduce using rule 29 (compound_statement)


State 112

   50 do_while_statement: _DO statement _WHILE _LPAREN log_exp _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 116


State 113

   52 switch_statement: _SWITCH _LPAREN _ID $@6 _RPAREN _LBRACKET . case_part default_part _RBRACKET

    _CASE  shift, and go to state 117

    case_part  go to state 118
    case       go to state 119


State 114

   65 basic_for: _FOR _ID _ASSIGN literal _DIRECTION literal . $@10 step_part statement _NEXT _ID

    $default  reduce using rule 64 ($@10)

    $@10  go to state 120


State 115

   63 standard_for: _FOR _LPAREN _TYPE _ID _ASSIGN literal . @8 _SEMICOLON rel_exp _SEMICOLON _ID $@9 _INC _RPAREN _LBRACKET statement _RBRACKET

    $default  reduce using rule 61 (@8)

    @8  go to state 121


State 116

   50 do_while_statement: _DO statement _WHILE _LPAREN log_exp _RPAREN _SEMICOLON .

    $default  reduce using rule 50 (do_while_statement)


State 117

   56 case: _CASE . literal $@7 _COLON statement break_part

    _INT_NUMBER   shift, and go to state 46
    _UINT_NUMBER  shift, and go to state 47

    literal  go to state 122


State 118

   52 switch_statement: _SWITCH _LPAREN _ID $@6 _RPAREN _LBRACKET case_part . default_part _RBRACKET
   54 case_part: case_part . case

    _CASE     shift, and go to state 117
    _DEFAULT  shift, and go to state 123

    $default  reduce using rule 59 (default_part)

    case          go to state 124
    default_part  go to state 125


State 119

   53 case_part: case .

    $default  reduce using rule 53 (case_part)


State 120

   65 basic_for: _FOR _ID _ASSIGN literal _DIRECTION literal $@10 . step_part statement _NEXT _ID

    _STEP  shift, and go to state 126

    $default  reduce using rule 66 (step_part)

    step_part  go to state 127


State 121

   63 standard_for: _FOR _LPAREN _TYPE _ID _ASSIGN literal @8 . _SEMICOLON rel_exp _SEMICOLON _ID $@9 _INC _RPAREN _LBRACKET statement _RBRACKET

    _SEMICOLON  shift, and go to state 128


State 122

   56 case: _CASE literal . $@7 _COLON statement break_part

    $default  reduce using rule 55 ($@7)

    $@7  go to state 129


State 123

   60 default_part: _DEFAULT . _COLON statement

    _COLON  shift, and go to state 130


State 124

   54 case_part: case_part case .

    $default  reduce using rule 54 (case_part)


State 125

   52 switch_statement: _SWITCH _LPAREN _ID $@6 _RPAREN _LBRACKET case_part default_part . _RBRACKET

    _RBRACKET  shift, and go to state 131


State 126

   67 step_part: _STEP . literal

    _INT_NUMBER   shift, and go to state 46
    _UINT_NUMBER  shift, and go to state 47

    literal  go to state 132


State 127

   65 basic_for: _FOR _ID _ASSIGN literal _DIRECTION literal $@10 step_part . statement _NEXT _ID

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _ID        shift, and go to state 23
    _LBRACKET  shift, and go to state 24
    _DO        shift, and go to state 26
    _SWITCH    shift, and go to state 27
    _FOR       shift, and go to state 28

    statement             go to state 133
    compound_statement    go to state 30
    assignment_statement  go to state 31
    assigns               go to state 32
    increment_statement   go to state 33
    function_call         go to state 34
    if_statement          go to state 35
    if_part               go to state 36
    do_while_statement    go to state 37
    switch_statement      go to state 38
    standard_for          go to state 39
    basic_for             go to state 40
    return_statement      go to state 41


State 128

   63 standard_for: _FOR _LPAREN _TYPE _ID _ASSIGN literal @8 _SEMICOLON . rel_exp _SEMICOLON _ID $@9 _INC _RPAREN _LBRACKET statement _RBRACKET

    _ID           shift, and go to state 45
    _INT_NUMBER   shift, and go to state 46
    _UINT_NUMBER  shift, and go to state 47
    _LPAREN       shift, and go to state 68

    num_exp        go to state 69
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53
    rel_exp        go to state 134


State 129

   56 case: _CASE literal $@7 . _COLON statement break_part

    _COLON  shift, and go to state 135


State 130

   60 default_part: _DEFAULT _COLON . statement

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _ID        shift, and go to state 23
    _LBRACKET  shift, and go to state 24
    _DO        shift, and go to state 26
    _SWITCH    shift, and go to state 27
    _FOR       shift, and go to state 28

    statement             go to state 136
    compound_statement    go to state 30
    assignment_statement  go to state 31
    assigns               go to state 32
    increment_statement   go to state 33
    function_call         go to state 34
    if_statement          go to state 35
    if_part               go to state 36
    do_while_statement    go to state 37
    switch_statement      go to state 38
    standard_for          go to state 39
    basic_for             go to state 40
    return_statement      go to state 41


State 131

   52 switch_statement: _SWITCH _LPAREN _ID $@6 _RPAREN _LBRACKET case_part default_part _RBRACKET .

    $default  reduce using rule 52 (switch_statement)


State 132

   67 step_part: _STEP literal .

    $default  reduce using rule 67 (step_part)


State 133

   65 basic_for: _FOR _ID _ASSIGN literal _DIRECTION literal $@10 step_part statement . _NEXT _ID

    _NEXT  shift, and go to state 137


State 134

   63 standard_for: _FOR _LPAREN _TYPE _ID _ASSIGN literal @8 _SEMICOLON rel_exp . _SEMICOLON _ID $@9 _INC _RPAREN _LBRACKET statement _RBRACKET

    _SEMICOLON  shift, and go to state 138


State 135

   56 case: _CASE literal $@7 _COLON . statement break_part

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _ID        shift, and go to state 23
    _LBRACKET  shift, and go to state 24
    _DO        shift, and go to state 26
    _SWITCH    shift, and go to state 27
    _FOR       shift, and go to state 28

    statement             go to state 139
    compound_statement    go to state 30
    assignment_statement  go to state 31
    assigns               go to state 32
    increment_statement   go to state 33
    function_call         go to state 34
    if_statement          go to state 35
    if_part               go to state 36
    do_while_statement    go to state 37
    switch_statement      go to state 38
    standard_for          go to state 39
    basic_for             go to state 40
    return_statement      go to state 41


State 136

   60 default_part: _DEFAULT _COLON statement .

    $default  reduce using rule 60 (default_part)


State 137

   65 basic_for: _FOR _ID _ASSIGN literal _DIRECTION literal $@10 step_part statement _NEXT . _ID

    _ID  shift, and go to state 140


State 138

   63 standard_for: _FOR _LPAREN _TYPE _ID _ASSIGN literal @8 _SEMICOLON rel_exp _SEMICOLON . _ID $@9 _INC _RPAREN _LBRACKET statement _RBRACKET

    _ID  shift, and go to state 141


State 139

   56 case: _CASE literal $@7 _COLON statement . break_part

    _BREAK  shift, and go to state 142

    $default  reduce using rule 57 (break_part)

    break_part  go to state 143


State 140

   65 basic_for: _FOR _ID _ASSIGN literal _DIRECTION literal $@10 step_part statement _NEXT _ID .

    $default  reduce using rule 65 (basic_for)


State 141

   63 standard_for: _FOR _LPAREN _TYPE _ID _ASSIGN literal @8 _SEMICOLON rel_exp _SEMICOLON _ID . $@9 _INC _RPAREN _LBRACKET statement _RBRACKET

    $default  reduce using rule 62 ($@9)

    $@9  go to state 144


State 142

   58 break_part: _BREAK . _SEMICOLON

    _SEMICOLON  shift, and go to state 145


State 143

   56 case: _CASE literal $@7 _COLON statement break_part .

    $default  reduce using rule 56 (case)


State 144

   63 standard_for: _FOR _LPAREN _TYPE _ID _ASSIGN literal @8 _SEMICOLON rel_exp _SEMICOLON _ID $@9 . _INC _RPAREN _LBRACKET statement _RBRACKET

    _INC  shift, and go to state 146


State 145

   58 break_part: _BREAK _SEMICOLON .

    $default  reduce using rule 58 (break_part)


State 146

   63 standard_for: _FOR _LPAREN _TYPE _ID _ASSIGN literal @8 _SEMICOLON rel_exp _SEMICOLON _ID $@9 _INC . _RPAREN _LBRACKET statement _RBRACKET

    _RPAREN  shift, and go to state 147


State 147

   63 standard_for: _FOR _LPAREN _TYPE _ID _ASSIGN literal @8 _SEMICOLON rel_exp _SEMICOLON _ID $@9 _INC _RPAREN . _LBRACKET statement _RBRACKET

    _LBRACKET  shift, and go to state 148


State 148

   63 standard_for: _FOR _LPAREN _TYPE _ID _ASSIGN literal @8 _SEMICOLON rel_exp _SEMICOLON _ID $@9 _INC _RPAREN _LBRACKET . statement _RBRACKET

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _ID        shift, and go to state 23
    _LBRACKET  shift, and go to state 24
    _DO        shift, and go to state 26
    _SWITCH    shift, and go to state 27
    _FOR       shift, and go to state 28

    statement             go to state 149
    compound_statement    go to state 30
    assignment_statement  go to state 31
    assigns               go to state 32
    increment_statement   go to state 33
    function_call         go to state 34
    if_statement          go to state 35
    if_part               go to state 36
    do_while_statement    go to state 37
    switch_statement      go to state 38
    standard_for          go to state 39
    basic_for             go to state 40
    return_statement      go to state 41


State 149

   63 standard_for: _FOR _LPAREN _TYPE _ID _ASSIGN literal @8 _SEMICOLON rel_exp _SEMICOLON _ID $@9 _INC _RPAREN _LBRACKET statement . _RBRACKET

    _RBRACKET  shift, and go to state 150


State 150

   63 standard_for: _FOR _LPAREN _TYPE _ID _ASSIGN literal @8 _SEMICOLON rel_exp _SEMICOLON _ID $@9 _INC _RPAREN _LBRACKET statement _RBRACKET .

    $default  reduce using rule 63 (standard_for)
